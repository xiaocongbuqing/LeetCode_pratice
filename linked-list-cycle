/*题目描述

Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 //用快慢指针即可
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head==NULL)return false;
        
        ListNode* p1=head,*p2=head;
        do{
            if(p1->next==NULL)return false;
            else p1=p1->next;
            if(p2->next==NULL)return false;
            else
            {
                if(p2->next->next==NULL)return false;
                else p2=p2->next->next;
            }
        }while(p1!=p2);
        return true;
    }
};
